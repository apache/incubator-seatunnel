#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
######
###### This config file is a demonstration of streaming processing in seatunnel config
######

env {
  parallelism = 1
  job.mode = "BATCH"
}

source {
  # This is a example source plugin **only for test and demonstrate the feature source plugin**
  FakeSource {
      plugin_output = "fake1"
      schema = {
        table = "fake.table1"
        fields {
          id = bigint
          name = string
          score = int
        }
      }
      rows = [
        {
          kind = INSERT
          fields = [1, "A", 100]
        },
        {
          kind = INSERT
          fields = [2, "B", 100]
        },
        {
          kind = INSERT
          fields = [3, "C", 100]
        },
        {
          kind = INSERT
          fields = [3, "C", 100]
        },
        {
          kind = INSERT
          fields = [3, "C", 100]
        },
        {
          kind = INSERT
          fields = [3, "C", 100]
        }
        {
          kind = UPDATE_BEFORE
          fields = [1, "A", 100]
        },
        {
          kind = UPDATE_AFTER
          fields = [1, "A", 300]
        },
        {
          kind = DELETE
          fields = [2, "B", 100]
        },
                 {
                   kind = INSERT
                   fields = [2, "B", 100]
                 }
      ]
    }

    FakeSource {
        plugin_output = "fake2"
        schema = {
          table = "fake.public.table2"
          fields {
            id = bigint
            name = string
            score = int
          }
        }
        rows = [
          {
            kind = INSERT
            fields = [1, "A", 100]
          },
          {
            kind = INSERT
            fields = [2, "B", 100]
          },
          {
            kind = DELETE
            fields = [2, "B", 100]
          },
          {
            kind = INSERT
            fields = [3, "C", 100]
          },
          {
            kind = INSERT
            fields = [3, "C", 100]
          }
        ]
      }

}

transform {
  Sql {
    plugin_input = "fake1"
    plugin_output = "fake3"
    query = "select * from fake1"
  }
    Sql {
      plugin_input = "fake3"
      plugin_output = "fake4"
      query = "select * from fake3"
    }
    Sql {
      plugin_input = "fake4"
      plugin_output = "fake5"
      query = "select * from fake4"
    }
  Sql {
    plugin_input = "fake2"
    plugin_output = "fake6"
    query = "select * from fake2"
  }
    Sql {
      plugin_input = "fake6"
      plugin_output = "fake7"
      query = "select * from fake6"
    }
    Sql {
      plugin_input = "fake7"
      plugin_output = "fake8"
      query = "select * from fake7"
    }

}

sink {
  console {
    plugin_input = "fake5"
  }
  console {
    plugin_input = "fake8"
  }
}